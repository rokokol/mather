{
  "RU": {
    "start": "Ну привет, дорогой @{}. Не желаешь взять интеграл со мной? \uD83E\uDD2D\n\n---\nSwitch language: /lang",
    "expr_caption": "Твое {} выражение \uD83D\uDE0E\n\n---\n{} версия:\n`{}`",
    "too_hard": "Поняла, что считать это слишком долго... Дай что-нибудь попроще \uD83D\uDE2C",
    "too_long_to_fit": "Результат слишком длинный для того, чтобы вместить его тут \uD83D\uDE2E\u200D\uD83D\uDCA8",
    "too_long_to_save": "Результат слишком большой даже для того, чтобы просто хранить его в моей памяти \uD83D\uDE32",
    "too_big_expr": "Tвое выражение... слишком длинное \uD83D\uDE2C",
    "empty_args": "Введи выражение после команды \uD83D\uDE4F\nВзгляни: /help",
    "expr_invite": "\uD83E\uDDD0 Сначала введи выражение с помощью /expr\n\nДля дальнейшей работы используй остальные команды — подробнее `/help expr`~",
    "too_big_args": "Слишком длинные аргументы... \uD83D\uDE29",
    "diff_single_value_error": "\uD83E\uDDD0 Не могу разобраться... Как это дифференцировать? Уточни с помощью аргументов, пожалуйста:\n`/diff var1 var2 ... varn`\n\nИли же перепроверь выражение: /show ☺\uFE0F",
    "diff_value_error": "\uD83E\uDDD0 Не могу разобраться... Как это дифференцировать? Уточни с помощью аргументов, пожалуйста:\n`/diff var1 var2 ... varn`\n\nИли же перепроверь выражение: /show ☺\uFE0F",
    "diff_caption": "Продифференцировала ☺\uFE0F\n`{}`",
    "integ_caption": "Проинтегрировала ☺\uFE0F\n`{}`",
    "integ_value_error": "\uD83E\uDDD0 Но как... Как это интегрировать..? Уточни с помощью аргументов, пожалуйста:\n`/integ var1 var2 ... varn`\n\nИли же перепроверь выражение: /show ☺\uFE0F",
    "integval_caption": "Вот значение интеграла в этих пределах ☺\uFE0F\n`{}`",
    "integval_value_error": "\uD83E\uDDD0 Но как... Как это интегрировать..? Уточни с помощью аргументов, пожалуйста:\n`/integval var1 from to var2 from to ...`\n\nИли же перепроверь выражение: /show ☺\uFE0F",
    "subs_caption": "Вот я и подставила эту точку в твою функцию \uD83D\uDE09\n`{}`",
    "subs_value_error": "\uD83E\uDDD0 Но как... Или даже что.. подставлять? Уточни с помощью аргументов, пожалуйста:\n`/subs var1 value1 var2 value2 ...`\n\nИли же перепроверь выражение: /show ☺\uFE0F",
    "eval_caption": "Вот значение функции c твоим приближением \uD83D\uDE09\n`{}`",
    "eval_value_error": "\uD83E\uDDD0 Но как... Или даже что.. считать? Уточни с помощью аргументов, пожалуйста:\n`/eval approximation`\n\nИли же перепроверь выражение: /show ☺\uFE0F",
    "plot2d_caption": "Вот 2d график твоей функции относительно `{}` \uD83E\uDD13\n`{}`",
    "plot2d_value_error": "Я не понимаю... что-то не так с твоим выражением или границами. Сразу говорю, что нельзя использовать знак дроби! Я не понимаю... \uD83D\uDE16\nПодробнее: `/help plot2d`",
    "plot3d_caption": "Вот 3d график твоей функции относительно `{}` и `{}` \uD83E\uDD13\n`{}`",
    "plot3d_value_error": "Я не понимаю... что-то не так с твоим выражением или границами. Сразу говорю, что нельзя использовать знак дроби! Я не понимаю... \uD83D\uDE16\nПодробнее: `/help plot3d`",
    "pplot2d_caption": "Вот 2d график твоих параметрических функций \uD83E\uDD13\n`Matrix({})`",
    "pplot2d_value_error": "Я не понимаю... что-то не так с твоим выражением или границами. Сразу говорю, что нельзя использовать знак дроби! Я не понимаю... \uD83D\uDE16\nПодробнее: `/help pplot2d`",
    "pplot3d_caption": "Вот 3d график твоих параметрических функций \uD83E\uDD13\n`Matrix({})`",
    "pplot3d_value_error": "Я не понимаю... что-то не так с твоим выражением или границами. Сразу говорю, что нельзя использовать знак дроби! Я не понимаю... \uD83D\uDE16\nПодробнее: `/help pplot3d`",
    "wrong_expr": "Не понимаю ввод \uD83E\uDD28",
    "help": "Привет ☺\uFE0F\nЯ умею считать, дифференцировать, интегрировать, строить графики и еще уйму всего \uD83D\uDE0E\nУмоляю, не нужно писать мне привет или что-то типа того, я слищком занями для этого \uD83D\uDE12\n\uD83D\uDE2E\u200D\uD83D\uDCA8 А для того, чтобы узнать о какой-либо команде подробнее — пиши:\n`/help command`\n⚠\uFE0F *Не забывай, что после любого преобразования, я запоминаю сам результат, вместо того, что было. То есть, если ты продифференцируешь выражение, а потом попробуешь построить график функции, то я построю график самиого дифференциала функции*\n\nP.S. вообще, для того, чтобы нам работать вместе, тебе не нужно перед каждой командой писать слэш, а для ввода выражения и вовсе достаточно лишь ввести его (будет использоваться синтакс SymPy, то есть прям как на питоне) \uD83D\uDE0E\nПопробуй ввести:\n> `cos(x)^sin(x)`\n> `diff`\n\n⚠\uFE0F *Если ты хочешь указать некоторые константы, то вот таблица (для SymPy синтаксиса):*\n__inf -> oo__\n__e -> E__\n__π -> pi__\n__i -> I__\n\n\uD83D\uDE12 А так же не используй кириллицу, она не применяется в математических обозначениях; для чисел с плавающей точкой используй ТОЧКУ, а не ЗАПЯТУЮ. Я просто могу не ответить (на самом деле просто выпадет миллион ошибок, которые я не знаю как обрабатывать \uD83D\uDE35)\n\nУдачки \uD83D\uDE48",
    "start_help": "",
    "lang_help": "Буду говорить на русском или английском, только скажи! \uD83D\uDE4F",
    "exprl_help": "Введи после этой команды LaTeX выражение и я все пойму и запомню! ☺\uFE0F\nНапример:\n'/exprl 2^{/sin(x)}'",
    "exprs_help": "Введи после этой команды SymPy выражение и я все пойму и запомню! ☺\uFE0F\nНапример:\n'/exprl 2*sin(x)'",
    "expr_help": "Думаю в будущем научиться самостоятельно разливать где SymPy, а где LaTeX. Но пока что по умолчанию буду тут рассматривать ввод как LaTeX \uD83E\uDD14\nНапример:\n`/expr 2*sin(x)`",
    "diff_help": "Продифференцирую все, что ты пожелаешь ☺\uFE0F\nЕсли у тебя больше одной переменной, то уножно явно указывать по каким их них нужно дифференцировать\nНапример: \n`/diff x y` — дифференциал по x и y",
    "integ_help": "Возьму любой неопределенный интеграл \uD83D\uDE0C\nЕсли переменных несколько, то, пожалуйста, укажи явно по каким из ин мне следует интегрировать \uD83D\uDE35\nНапример:\n`/integ x y` — проинтегрирую по x и y",
    "integval_help": "Проинтегрирую в заданных границах \uD83D\uDE0B\nУкажи 2 числа: нижний и верхний предел интегрирования\n\uD83E\uDDD0 *Если ты укажешь только одно число, то я вощьму его как верхний предел. А нижний по уумолчанию поставлю равным нулю*\n\uD83D\uDE2E *Если ты напишешь функцию без аргументов, то я по умолчанию проинтегрирую от 0 до 1*\nЕсли переменных несколько, то нужно явно указать по какому из них интегрировать. Иначе я проинтегрирую по первому встречному \uD83E\uDD2D\nНапример:\n`/integval x 0 1 y -1 1` — проинтегрирую по x от 0 и до 1, а по y — от 1 до -1",
    "eval_help": "Вычислю приближенное значение функции \uD83E\uDD17\nТы можешь указать точность при желании. Но я не прийму запрос больше 100 знаков  \uD83D\uDE13\nНапример:\n`/eval 10` — посчитаю с точностью до 10 знаков ",
    "plot2d_help": "Нарисую двумерный график! Если у тебя в выражении больше 1 переменной, то явно укажи относительно какой из них нужно строить! (остальные я при построении просто занулю) \uD83E\uDD2D\nТак же можно указать границы несколькими способами\nНапример:\n`/plot2d x 3.14` — построю график относительно x, x и f(x) принимают значения от -3.14 до 3.14 \n`/plot2d 1 3.14` — x принимает значения от -1 до 1, f(x) — от -3.14 до 3.14\n`/plot2d 0 1 -1 3.14` — x принимает значения от 0 до 1, f(x) — от -1 до 3.14\n\n⚠\uFE0F Для границ графика принимаю только числа с плавающей точкой, без дробных черт",
    "plot3d_help": "",
    "pplot2d_help": "",
    "pplot3d_help": "",
    "subs_help": "Сделаю замену переменной \uD83D\uDE0B\nВведи снача переменную, а потом значение для замены\nНапример:\n`/subs t 7 x -8 y sin(z)` — заменю t на 7, x на -8, а y на sin(z)",
    "show_help": "Покажу текущее выражение в виде картинки! Но учти, что в Telegram я не могу загрузить изображение, большее чем 1280x1280 прикселей \uD83E\uDD72\nМожешь указать разрешение в DPI при желании. Но не больше 1000! По умолчанию будет в 700 DPI \uD83E\uDD28\nНапример:\n`/show 300` — нарисую текущее выражение с разрешением в 300 DPI"
  },
  "EN": {
    "start": "Wellcome, @{}. Don't mind to take an integral with me? \uD83E\uDD2D\n\n---\nПоменять язык: /lang",
    "expr_caption": "There is your {} expression \uD83D\uDE0E\n\n---\n{} version:\n`{}`",
    "too_long_to_fit": "The result is too long to fit it here \uD83D\uDE2E\u200D\uD83D\uDCA8",
    "too_long_to_save": "The result is too big even to just store it in my memory \uD83D\uDE32",
    "too_hard": "I realized that it took too long to count... Give me something simpler \uD83D\uDE2C",
    "too_big_expr": "Your expression... is... too big \uD83D\uDE2C",
    "empty_args": "Input your expression after the command \uD83D\uDE4F\nMore: /help",
    "expr_invite": "\uD83E\uDDD0 Enter your expression with /expr first\n\nAnd use other commands for further work — `/help expr` to more details~",
    "too_big_args": "Too long arguments... \uD83D\uDE29",
    "diff_single_value_error": "\uD83E\uDDD0 I can't understand... How to differentiate that? Specify it with args:\n`/diff var1 var2 ... varn`\n\nOr double-check the expression: /show ☺\uFE0F",
    "diff_value_error": "\uD83E\uDDD0 I can't understand... How to differentiate that? Specify it with args:\n`/diff var1 var2 ... varn`\n\nOr double-check the expression: /show ☺\uFE0F",
    "diff_caption": "I differentiated it ☺\uFE0F\n`{}`",
    "integ_caption": "I integrated it ☺\uFE0F\n`{}`",
    "integ_value_error": "\uD83E\uDDD0 But h-how... How integrate it..? Specify it with args:\n`/integ var1 var2 ... varn`\n\nOr double-check the expression: /show ☺\uFE0F",
    "integval_caption": "Here is the value of the integral within these limits ☺\uFE0F\n`{}`",
    "integval_value_error": "\uD83E\uDDD0 But h-how... How integrate it..? Specify it with args:\n`/integval var1 from to var2 from to ...`\n\nOr double-check the expression: /show ☺\uFE0F",
    "subs_caption": "So I inserted this point into your function \uD83D\uDE09\n`{}`",
    "subs_value_error": "\uD83E\uDDD0 B-but... Or what.. I should do with that stuff? Specify it with args:\n`/subs var1 value1 var2 value2 ...`\n\nOr double-check the expression: /show ☺\uFE0F",
    "eval_caption": "Here is the value of the function with that approximation \uD83D\uDE09\n`{}`",
    "eval_value_error": "\uD83E\uDDD0 B-but... Or what.. I should do with that stuff? Specify it with args:\n`/eval approximation`\n\nOr double-check the expression: /show ☺\uFE0F",
    "plot2d_caption": "Here is a 2d plot of your functions by `{}` \uD83E\uDD13\n`{}`",
    "plot2d_value_error": "I don't understand... There's something wrong with your expression or boundaries..? I say right away that you can't use the fraction sign! I don't understand... \uD83D\uDE16\nFor more details: `/help plot2d`",
    "plot3d_caption": "Here is a 3d plot of your function by `{}` and `{}` \uD83E\uDD13\n`{}`",
    "plot3d_value_error": "I don't understand... There's something wrong with your expression or boundaries..? I say right away that you can't use the fraction sign! I don't understand... \uD83D\uDE16\nFor more details: `/help plot3d`",
    "pplot2d_caption": "Here is a 2d plot of your parametric functions \uD83E\uDD13\n`Matrix({})`",
    "pplot2d_value_error": "I don't understand... There's something wrong with your expression or boundaries..? I say right away that you can't use the fraction sign! I don't understand... \uD83D\uDE16\nFor more details: `/help pplot2d`",
    "pplot3d_caption": "Here is a 2d plot of your parametric functions \uD83E\uDD13\n`Matrix({})`",
    "pplot3d_value_error": "I don't understand... There's something wrong with your expression or boundaries..? I say right away that you can't use the fraction sign! I don't understand... \uD83D\uDE16\nFor more details: `/help pplot3d`",
    "wrong_expr": "I can't understand the input \uD83E\uDD28",
    "help": "Hello, ☺\uFE0F \nI can count, differentiate, integrate, build graphs and a lot more \uD83D\uDE0E\n I beg you, you don't need to write hello to me or something like that, I'm using \uD83D\uDE12\n\uD83D\uDE2E\u200D\uD83D\uDCA8 for this, but in order to learn more about any command — write:\n`/help command`\n\uFE0F *Don't forget that after any conversion, I remember the result itself, instead of what happened. That is, if you differentiate the expression, and then try to plot the function, then I will plot the differential itself functions*\n\nP.S. in general, in order for us to work together, you don't need to write a slash before each command, and to enter an expression at all, you just need to enter its (SymPy syntax will be used, that is, just like in python) \uD83D\uDE0E\n Try to enter:\n> `cos(x)^sin(x)`\n> `diff`\n\n⚠\uFE0F *If you if you want to specify some constants, then here is the table (for SymPy syntax):*\n__inf -> oo__\n__e -> E__\n__π -> pi__\n__i -> I__\n\n\uD83D\uDE12 And also do not use Cyrillic, it is not used in mathematical notation; in float numbers use DOT, not COMMA. I just might not answer (in fact, there will just be a million errors that I do not know how to handle \uD83D\uDE35)\n\nGood Luck \uD83D\uDE48",
    "start_help": "",
    "lang_help": "I will speak Russian or English, just tell me! \uD83D\uDE4F",
    "exprl_help": "Enter a LaTeX expression after this command and I will understand and remember everything! \uFE0F\nFor example:\n'/exprl 2^{/sin(x)}'",
    "exprs_help": "Введи после этой команды SymPy выражение и я все пойму и запомню! ☺\uFE0F\nНапример:\n'/exprl 2*sin(x)'",
    "expr_help": "I think in the future I will learn how to pour myself where SymPy is and where LaTeX is. But for now, by default, I will consider the input here as LaTeX \uD83E\uDD14\nFor example:\n`/expr 2*sin(x)`\n",
    "diff_help": "I'll differentiate whatever you want. \uFE0F\nIf you have more than one variable, then you need to explicitly specify which ones you need differentiate\nFor example: \n`/diff x y` — differential in x and y\n",
    "integ_help": "I 'll take any indefinite integral \uD83D\uDE0C\nIf there are several variables, then please specify explicitly which of them I should integrate \uD83D\uDE35\nFor example:\n`/integ x y` — integrate by x and y",
    "integval_help": "I will integrate within the specified boundaries \uD83D\uDE0B\nSpecify 2 numbers: the lower and upper limit of integration\n*If you specify only one number, then I will wax it as the upper limit. And I will set the lower one equal to zero according to the silence*\n\uD83D\uDE2E *If you write a function without arguments, then I will integrate from 0 to 1 by default*\nIf the variables if there are several, then you need to explicitly specify which one to integrate. Otherwise, I will integrate on the first comer \uD83E\uDD2D\nFor example:\n`/integval x 0 1 y -1 1` — I integrate x from 0 to 1, and y — from 1 to -1\n",
    "eval_help": "I will calculate the approximate value of the function \uD83E\uDD17\nYou can specify the accuracy if desired. But I will not accept a request of more than 100 characters.\nFor example:\n`/eval 10` — I will count up to 10 characters",
    "plot2d_help": "I'll draw a two-dimensional plot! If you have more than 1 variable in your expression, then explicitly specify which one to build! (the rest I'll zero during the plotting) \uD83E\uDD2D\nYou can also specify the boundaries in several ways\nFor example:\n`/plot2d x 3.14` — plotting relative to x, x and f(x) take values from -3.14 to 3.14 \n`/plot2d 1 3.14` — x takes values from -1 to 1, f(x) — from -3.14 up to 3.14\n`/plot2d 0 1 -1 3.14` — x takes values from 0 to 1, f(x) — from -1 to 3.14\n\n⚠\uFE0F I accept only floating point numbers for the boundaries of the graph, without fractional features",
    "plot3d_help": "",
    "paramplot_help": "",
    "subs_help": "I'll make a substitute \uD83D\uDE0B\nInput the variable and the value to replace it\nFor example:\n`/subs t 7 x -8 y sin(z)` — substitute t with 7, x with -8, and y with sin(z)",
    "show_help": "I will show the current expression in the form of an image! But keep in mind that I cannot upload an image larger than 1280x1280 pixels to Telegram.\nYou can specify resolution in DPI if desired. But no more than 1000! By default, it will be 700 DPI.\nFor example:\n`/show 300` — I will draw the current expression with a resolution of 300 DPI\n"
  }
}